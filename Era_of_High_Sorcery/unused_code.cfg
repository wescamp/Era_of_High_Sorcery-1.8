# wmllint: no translatables

# Macro voodoo (from an attempt to make the leadership ability the hard way)

#define UP_FROM_0
1#enddef
#define UP_FROM_1
2#enddef
#define UP_FROM_2
3#enddef
#define UP_FROM_3
4#enddef
#define UP_FROM_4
5#enddef

#define DOWN_FROM_1
0#enddef
#define DOWN_FROM_2
1#enddef
#define DOWN_FROM_3
2#enddef
#define DOWN_FROM_4
3#enddef
#define DOWN_FROM_5
4#enddef

#define RECUR1 MACRO INITIAL_VALUE
{MACRO{INITIAL_VALUE}}#enddef
#define RECUR2 MACRO INITIAL_VALUE
{{MACRO}{RECUR1 ({MACRO}) ({INITIAL_VALUE})}}#enddef
#define RECUR3 MACRO INITIAL_VALUE
{{MACRO}{RECUR2 ({MACRO}) ({INITIAL_VALUE})}}#enddef
#define RECUR4 MACRO INITIAL_VALUE
{{MACRO}{RECUR3 ({MACRO}) ({INITIAL_VALUE})}}#enddef
#define RECUR5 MACRO INITIAL_VALUE
{{MACRO}{RECUR4 ({MACRO}) ({INITIAL_VALUE})}}#enddef

#define REPEAT1 MACRO
{MACRO 1}#enddef
#define REPEAT2 MACRO
{MACRO 2}
{REPEAT1 MACRO}#enddef
#define REPEAT3 MACRO
{MACRO 3}
{REPEAT2 MACRO}#enddef
#define REPEAT4 MACRO
{MACRO 4}
{REPEAT3 MACRO}#enddef
#define REPEAT5 MACRO
{MACRO 5}
{REPEAT4 MACRO}#enddef

#define SUBTRACT MINUEND SUBTRAHEND
{RECUR{SUBTRAHEND} DOWN_FROM_ {MINUEND}}#enddef


#define EOHS_LEADERSHIP_FROM_TO MY_LEVEL THEIR_LEVEL_PLUS_1
{EOHS_LEADERSHIP_SINGLE {MY_LEVEL} {DOWN_FROM_{THEIR_LEVEL_PLUS_1}} {{SUBTRACT {MY_LEVEL} {DOWN_FROM_{THEIR_LEVEL_PLUS_1}}}_TIMES_25}}
#define EOHS_LEADERSHIP_FROM_LEVEL MY_LEVEL
{REPEAT{MY_LEVEL} ({EOHS_LEADERSHIP_FROM_TO {MY_LEVEL}})}
#enddef





#define BERSERK_STOPPING_HACK_EVENT WHAT_HAPPENS
[event]
name=attacker {WHAT_HAPPENS}
first_time_only=no
[filter_attack]
special=berserk
[/filter_attack]
[filter_second]
{IS_WIZARD_LEADER}
[/filter_second]
  {VARIABLE_OP berserk_stopping_hack_swings add 1}
  {IF_VAR berserk_stopping_hack_swings greater_than_equal_to 4 ([then]
    [store_unit]
      [filter]
        x=$x2
	y=$y2
      [/filter]
      kill=yes
      variable=flipping_to_stop_berserk
    [/store_unit]
    {VARIABLE stopping_berserk_now true}
  [/then])}
[/event]
#enddef

# Handle the annoying "berserkers when the leader is a mage" problem
[event]
name=attack
first_time_only=no
[filter_attack]
special=berserk
[/filter_attack]
[filter_second]
{IS_WIZARD_LEADER}
[/filter_second]
  {VARIABLE berserk_stopping_hack_swings 0}
[/event]
{BERSERK_STOPPING_HACK_EVENT hits}
{BERSERK_STOPPING_HACK_EVENT misses}
[event]
name=attack end
first_time_only=no
[filter_attack]
special=berserk
[/filter_attack]
  {IF_VAR stopping_berserk_now boolean_equals true ([then]
    [unstore_unit]
      variable=flipping_to_stop_berserk
    [/unstore_unit]
    {CLEAR_VARIABLE flipping_to_stop_berserk}
    {CLEAR_VARIABLE stopping_berserk_now}
  [/then])}
[/event]

# The "second chance" ability.
[event]
name=attacker hits
first_time_only=no
[filter_second]
  {IS_WIZARD_LEADER}
[/filter_second]
  [store_unit]
    [filter]
      x=$x2
      y=$y2
    [/filter]
    variable=wizard
  [/store_unit]
  {IF_VAR wizard.hitpoints less_than_equal_to 0 ([then]
    {VARIABLE old_hitpoints $wizard.hitpoints}
    {VARIABLE_OP old_hitpoints add $damage_inflicted}
    {IF_VAR old_hitpoints greater_than 1 ([then]
      {VARIABLE wizard.hitpoints 1}
      [unstore_unit]
        variable=wizard
      [/unstore_unit]
    [/then])}
  [/then])}
[/event]

